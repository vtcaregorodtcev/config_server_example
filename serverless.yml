service: ${self:custom.env.serviceName, 'unknown'}-service

provider:
  name: aws
  runtime: nodejs16.x
  memorySize: ${self:custom.env.memorySize}
  stage: ${env:ENV, 'dev'}
  region: ${opt:region, 'us-east-2'}
  stackName: ${self:service}-${self:provider.stage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  logRetentionInDays: ${self:custom.env.lambdaLogsRotation}
  apiGateway:
    apiKeys:
      - ${self:custom.env.repoApiKey}
      - ${self:custom.env.appApiKey}
    usagePlan:
      quota:
        limit: 5000
        offset: 0
        period: DAY
  iam:
    role: ${self:custom.env.role}
  environment:
    REGION: ${self:provider.region}
    SERVICE_NAME: ${self:service}
    STAGE: ${self:provider.stage}

    REPO_API_KEY: ${self:custom.env.repoApiKey}
    APP_API_KEY: ${self:custom.env.appApiKey}
    CONFIG_TABLE_NAME: ${self:custom.env.configTableName}

custom:
  profiles: ${file(./sls/profiles.yml)}
  deploymentBuckets: ${file(./sls/deployment-buckets.yml)}
  accountId: ${aws:accountId}
  namePrefix: ${self:service}-${self:provider.stage}-${self:provider.region}
  webpack:
    packager: "pnpm"
    keepOutputDirectory: true
  env: ${file(./sls/env.yml)}

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - "!.git"
    - "!.gitignore"
    - "!.editorconfig"
    - "!.eslintignore"
    - "!.eslintrc.js"
    - "!sls/**"
    - "!README.md"
    - "!serverless.yml"
    - "!jest.config.js"
    - "!tsconfig.json"
    - "!webpack.config.json"

plugins:
  - serverless-webpack
  - serverless-deployment-bucket
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-offline-local-authorizers-plugin

functions:
  - ${file(./sls/functions.yml)}

resources:
  - ${file(./sls/resources.yml)}
